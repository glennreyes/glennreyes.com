// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Page = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Page'
  title: string
  /** Markdown file body */
  body: Markdown
  slug: string
}

export type Post = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Post'
  cover?: Cover | undefined
  description: string
  publishedAt?: IsoDateTimeString | undefined
  title: string
  /** Markdown file body */
  body: Markdown
  slug: string
}  

/** Nested types */
export type Cover = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Cover'
  photo?: string | undefined
  title?: CoverAuthor | undefined

}

export type CoverAuthor = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'CoverAuthor'
  author: string
  url: string

}  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Page | Post
export type DocumentTypeNames = 'Page' | 'Post'

export type NestedTypes = Cover | CoverAuthor
export type NestedTypeNames = 'Cover' | 'CoverAuthor'


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Page: Page
  Post: Post
}

export type NestedTypeMap = {
  Cover: Cover
  CoverAuthor: CoverAuthor
}

 